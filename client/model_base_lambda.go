/*
core

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// BaseLambda struct for BaseLambda
type BaseLambda struct {
	Name string `json:"name"`
	Runtime string `json:"runtime"`
	LambdaType string `json:"lambda_type"`
}

// NewBaseLambda instantiates a new BaseLambda object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseLambda(name string, runtime string, lambdaType string) *BaseLambda {
	this := BaseLambda{}
	this.Name = name
	this.Runtime = runtime
	this.LambdaType = lambdaType
	return &this
}

// NewBaseLambdaWithDefaults instantiates a new BaseLambda object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseLambdaWithDefaults() *BaseLambda {
	this := BaseLambda{}
	return &this
}

// GetName returns the Name field value
func (o *BaseLambda) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BaseLambda) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BaseLambda) SetName(v string) {
	o.Name = v
}

// GetRuntime returns the Runtime field value
func (o *BaseLambda) GetRuntime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value
// and a boolean to check if the value has been set.
func (o *BaseLambda) GetRuntimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Runtime, true
}

// SetRuntime sets field value
func (o *BaseLambda) SetRuntime(v string) {
	o.Runtime = v
}

// GetLambdaType returns the LambdaType field value
func (o *BaseLambda) GetLambdaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LambdaType
}

// GetLambdaTypeOk returns a tuple with the LambdaType field value
// and a boolean to check if the value has been set.
func (o *BaseLambda) GetLambdaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LambdaType, true
}

// SetLambdaType sets field value
func (o *BaseLambda) SetLambdaType(v string) {
	o.LambdaType = v
}

func (o BaseLambda) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["runtime"] = o.Runtime
	}
	if true {
		toSerialize["lambda_type"] = o.LambdaType
	}
	return json.Marshal(toSerialize)
}

type NullableBaseLambda struct {
	value *BaseLambda
	isSet bool
}

func (v NullableBaseLambda) Get() *BaseLambda {
	return v.value
}

func (v *NullableBaseLambda) Set(val *BaseLambda) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseLambda) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseLambda) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseLambda(val *BaseLambda) *NullableBaseLambda {
	return &NullableBaseLambda{value: val, isSet: true}
}

func (v NullableBaseLambda) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseLambda) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


