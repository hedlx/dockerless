name: CI
on:
  pull_request:
  push:
    branches:
      - 'master'
jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout
        uses: actions/checkout@v3

      - name: üì¶ Set up Go
        id: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: üì¶ Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: üì¶ Set up openapi-generator
        id: setup-openapi
        run: |
          mkdir -p ~/.local/bin
          echo ~/.local/bin >> $GITHUB_PATH
          PATH=~/.local/bin:$PATH
          wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/6.0.1/openapi-generator-cli-6.0.1.jar -O ~/.local/bin/openapi-generator-cli.jar
          echo -e '#!/bin/sh\nexec java -jar ~/.local/bin/openapi-generator-cli.jar "$@"' > ~/.local/bin/openapi-generator
          chmod +x ~/.local/bin/openapi-generator
          openapi-generator version

      - name: Check go.mod
        if: steps.setup-openapi.outcome == 'success'
        run: |
          git clean -fxd && git reset --hard
          for i in $(find . -name go.mod); do
            echo "$i"
            cd "$GITHUB_WORKSPACE/${i%/go.mod}"
            go mod tidy
          done
          cd "$GITHUB_WORKSPACE"
          git diff --exit-code

      - name: Check api generation
        if: steps.setup-openapi.outcome == 'success'
        run: |
          git clean -fxd && git reset --hard
          make api
          git diff --exit-code

      - name: Cleanup
        if: always()
        run: |
          echo go-outcome=${{ steps.setup-go.outcome }}
          git clean -fxd && git reset --hard

      - name: Staticcheck cli
        if: steps.setup-openapi.outcome == 'success'
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          install-go: false
          version: '2022.1'
          working-directory: cli

      - name: Staticcheck manager
        if: steps.setup-openapi.outcome == 'success'
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          install-go: false
          version: '2022.1'
          working-directory: manager

      - name: Staticcheck handler
        if: steps.setup-openapi.outcome == 'success'
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          install-go: false
          version: '2022.1'
          working-directory: handler

  cli:
    name: Build cli
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout
        uses: actions/checkout@v3
      - name: üì¶ Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: üèó  Build
        working-directory: cli
        run: |
          go build .
      - name: ‚¨ÜÔ∏è Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: cli
          path: cli/cli

  manager:
    name: Build manager
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout
        uses: actions/checkout@v3
      - name: üèó Build image
        run: docker build manager -t doless-manager:latest
      - name: ‚¨ÜÔ∏è Upload doless-manager Docker image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "doless-manager:latest"

  handler:
    name: Build handler
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout
        uses: actions/checkout@v3
      - name: üèó Build image
        run: docker build handler -t doless-handler:latest
      - name: ‚¨ÜÔ∏è Upload doless-handler Docker image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "doless-handler:latest"

  run:
    name: Run
    needs: [cli, manager, handler]
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout
        uses: actions/checkout@v3
      - name: ‚¨áÔ∏è Download cli binary
        uses: actions/download-artifact@v3
        with:
          name: cli
          path: cli
      - run: chmod +x cli/cli
      - name: ‚¨áÔ∏è Download doless-manager docker image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "doless-manager:latest"
      - name: ‚¨áÔ∏è Download doless-handler docker image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "doless-handler:latest"
      - name: Run
        run: |
          set -x
          cli/cli --help
          docker-compose up -d
          sleep 5
          cli/cli runtime list
          docker-compose down
